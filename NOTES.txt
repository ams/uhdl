_1_Xspec-02
_1_Xspec-03
_1_Xspec-04

_2_busint-04
_2_busint-05
_2_busint-06
_2_busint-07
_2_busint-08
_2_busint-09
_2_busint-10
_2_busint-11
_2_busint-buspar
_2_busint-bussel
_2_busint-caps
_2_busint-clm
_2_busint-ctp
_2_busint-cubus
_2_busint-cxbus
_2_busint-datctl
_2_busint-dbgin
_2_busint-dbgout
_2_busint-diag
_2_busint-dpadr
_2_busint-dpdata
_2_busint-lmadr
_2_busint-lmdata
_2_busint-rbuf
_2_busint-reqerr
_2_busint-reqlm
_2_busint-reqtim
_2_busint-requ
_2_busint-requb
_2_busint-rqsync
_2_busint-uba
_2_busint-ubcyc
_2_busint-ubd
_2_busint-ubintc
_2_busint-ubmap
_2_busint-ubmast
_2_busint-ubxa
_2_busint-uprior
_2_busint-wbuf
_2_busint-xa
_2_busint-xapar
_2_busint-xbd
_2_busint-xd

_3_iob-03
_3_iob-04
_3_iob-05
_3_iob-06
_3_iob-07
_3_iob-08
_3_iob-09
_3_iob-10
_3_iob-clk60h
_3_iob-clktim
_3_iob-clktod
_3_iob-hexspc
_3_iob-iobadr
_3_iob-iobclk
_3_iob-iobcsr
_3_iob-iobint
_3_iob-iobjps
_3_iob-iobkbd
_3_iob-iobms2
_3_iob-iobmse
_3_iob-iobser
_3_iob-iobxcv
_3_iob-lmdatp
_3_iob-lmdetc
_3_iob-lmlndr
_3_iob-lmmodu
_3_iob-lmmynm
_3_iob-lmrbuf
_3_iob-lmrclk
_3_iob-lmrctl
_3_iob-lmtbfct
_3_iob-lmtbuf
_3_iob-lmtclk
_3_iob-lmturn
_3_iob-lmucon

_4_tv4b-03
_4_tv4b-04
_4_tv4b-05
_4_tv4b-06
_4_tv4b-07
_4_tv4b-08
_4_tv4b-09
_4_tv4b-10
_4_tv4b-caps
_4_tv4b-color
_4_tv4b-eclclk
_4_tv4b-eclsip
_4_tv4b-eclvid
_4_tv4b-gen4b
_4_tv4b-rama
_4_tv4b-ramadr
_4_tv4b-ramb
_4_tv4b-rambuf
_4_tv4b-ramc
_4_tv4b-ramcas
_4_tv4b-ramd
_4_tv4b-ramreg
_4_tv4b-ramshf
_4_tv4b-synadr
_4_tv4b-synclk
_4_tv4b-synram
_4_tv4b-synreg
_4_tv4b-tvinc
_4_tv4b-tvma
_4_tv4b-xbadr
_4_tv4b-xbctl
_4_tv4b-xbdata
_4_tv4b-xbus

_5-dc-dcbusy
_5-dc-dccaps
_5-dc-dcccw
_5-dc-dcchan
_5-dc-dcclk
_5-dc-dcclp
_5-dc-dccmd
_5-dc-dcda
_5-dc-dcdbus
_5-dc-dcecc
_5-dc-dcedge
_5-dc-dchdcm
_5-dc-dcpar
_5-dc-dcposc
_5-dc-dcrbuf
_5-dc-dcreg
_5-dc-dcsh
_5-dc-dcsts
_5-dc-dctmot
_5-dc-dctrid
_5-dc-dctrsg
_5-dc-dcuc
_5-dc-dcui
_5-dc-dcwbuf
_5-dc-dcxbsa
_5-dc-dcxbus
_5-dc-dcxbus_1
_5-dc-xbus
_5-dc-xbus_1
_5_dc-03
_5_dc-04
_5_dc-05
_5_dc-06
_5_dc-07
_5_dc-08
_5_dc-09
_5_dc-10
_5_dc-dcbusy
_5_dc-dccaps
_5_dc-dcccw
_5_dc-dcchan
_5_dc-dcclk
_5_dc-dcclp
_5_dc-dccmd
_5_dc-dcda
_5_dc-dcdbus
_5_dc-dcecc
_5_dc-dcedge
_5_dc-dchdcm
_5_dc-dcpar
_5_dc-dcposc
_5_dc-dcrbuf
_5_dc-dcreg
_5_dc-dcsh
_5_dc-dcsts
_5_dc-dctmot
_5_dc-dctrid
_5_dc-dctrsc
_5_dc-dcuc
_5_dc-dcui
_5_dc-dcwbuf
_5_dc-dcxbsa

_6-ubchni-03
_6-ubchni-04
_6-ubchni-05
_6-ubchni-06
_6-ubchni-07
_6-ubchni-lmdatp
_6-ubchni-lmdetc
_6-ubchni-lmlndr
_6-ubchni-lmmodu
_6-ubchni-lmmynm
_6-ubchni-lmrbuf
_6-ubchni-lmrclk
_6-ubchni-lmrctl
_6-ubchni-lmtbfc
_6-ubchni-lmtbuf
_6-ubchni-lmtclk
_6-ubchni-lmturn
_6-ubchni-lmucon
_6-ubchni-qadadr
_6-ubchni-qadjps
_6-ubchni-qadtim
_6-ubchni-qubbpl
_6-ubchni-qubint
_6-ubchni-qubxcv

00_ACTL
01_ALATCH
02_ALU0
03_ALU1
04_ALUC4
05_AMEM0
06_AMEM1
07_APAR
08_BCPINS
09_BCTERM
10_CAPS
11_CLOCKD
12_CONTRL
13_CPINS
14_DRAM0
15_DRAM1
16_DRAM2
17_DSPCTL
18_FLAG
19_IOR
20_IPAR
21_IREG
22_IWR
23_L
24_LC
25_LCC
26_LPC
27_MCTL
28_MD
29_MDS
30_MF
31_MLATCH
32_MMEM
33_MO0
34_MO1
35_MSKG4
36_NPC
37_OPCD
38_PDL0
39_PDL1
40_PDLCTL
41_PDLPTR
42_PLATCH
43_Q
44_QCTL
45_SHIFT0
46_SHIFT1
47_SMCTL
48_SOURCE
49_SPC
50_SPCLCH
51_SPCPAR
52_SPCW
53_SPY1
54_SPY2
55_TRAP
56_VCTL1
57_VCTL2
58_VMA
59_VMAS
60_VMEM0
61_VMEM1
62_VMEM2
63_VMEMDR
64_CLOCK1
65_CLOCK2
66_DEBUG
67_ICAPS
68_ICTL
69_IWRPAR
70_MBCPIN
71_MCPINS
72_OLORD1
73_OLORD2
74_OPCS
75_PCTL
76_PROM0
77_PROM1
78_IRAM00
79_IRAM01
80_IRAM02
81_IRAM03
82_IRAM10
83_IRAM11
84_IRAM12
85_IRAM13
86_IRAM20
87_IRAM21
88_IRAM22
89_IRAM23
90_IRAM30
91_IRAM31
92_IRAM32
93_IRAM33
94_SPY0
95_SPY4
96_STAT

//////////////////////////////////////////////////////////////////////

//////// CADR4

// A CONTROL (ACTL)					---!!!

// A MEMORY LATCH (ALATCH)				---!!!

// ALU0 (ALU0)						---!!!  ---
// ALU1 (ALU1)						---!!!  ---

// ALU CARRY AND FUNCTION (ALUC4)			---!!!

// A MEMORY LEFT (AMEM0)				---!!!  ---
// A MEMORY RIGHT (AMEM1)				---!!!  ---

// A&M PARITY (APAR)

// BUS INTERFACE CABLES (BCPINS)

// BUSINT CABLE TERMINATION (BCTERM)

// BYPASS CAPACITORS (CAPS)

// CLOCK DISTRIBUTION (CLOCKD)

// PC, SPC CONTROL (CONTRL)				---!!!

// CONNECTOR PINS (CPINS)

// DISPATCH RAM (DRAM0)					---!!!  ---
// DISPATCH RAM (DRAM1)					---!!!  ---
// DISPATCH RAM (DRAM2)					---!!!  ---

// DISPATCH CONTROL (DSPCTL)				---!!!

// FLAGS,CONDITIONALS (FLAG)				---!!!

// INST. MODIFY OR (IOR)				---!!!

// IR PARITY (IPAR)

// INSTRUCTION REGISTER (IREG)				---!!!

// INSTRUCTION WRITE REGISTER (IWR)			---!!!

// L REGISTER (L)					---!!!

// LOCATION COUNTER (LC)				---!!!

// LC CONTROL (LCC)					---!!!

// LAST PC (LPC)					---!!!

// M CONTROL (MCTL)					---!!!

// MEMORY DATA REGISTER (MD)				---!!!

// MEMORY DATA SELECTOR (MDS)				---!!!

// DRIVE MF ONTO M (MF)					---!!!

// M MEMORY LATCH (MLATCH)				---!!!

// M MEMORY (MMEM)					---!!!

// MASKER/OUTPUT SELECT (MO0)				---!!!  ---
// MASKER/OUTPUT SELECT (MO1)				---!!!  ---

// MASK GENERATION (MSKG4)				---!!!

// NPC,IPC,PC (NPC)					---!!!

// OPC, DC, ZERO DRIVE (OPCD)				---!!!

// PDL BUFFER LEFT (PDL0)				---!!!  ---

// PDL BUFFER RIGHT (PDL1)				---!!!  ---

// PDL BUFFER CONTROL (PDLCTL)				---!!!

// PDL INDEX AND POINTER (PDLPTR)			---!!!

// PDL BUFFER LATCH (PLATCH)

// Q REGISTER (Q)					---!!!

// Q REGISTER CONTROL (QCTL)

// SHIFTER RIGHT (SHIFT0)				---!!!  ---
// SHIFTER LEFT (SHIFT1)				---!!!  ---

// SHIFT/MASK CONTROL (SMCTL)				---!!!

// SOURCE, DEST, OP DECODE (SOURCE)			---!!!

// SPC MEMORY AND POINTER (SPC)				---!!!

// SPC MEMORY LATCH (SPCLCH)				---!!!

// SPC MEMORY PARITY (SPCPAR)

// SPC WRITE DATA SEL (SPCW)				---!!!

// PDP11 EXAMINE (IR, OB) (SPY1)
// PDP11 EXAMINE (A, M, FLAG2) (SPY2)

// PARITY ERROR TRAP (TRAP)				---!!!

// VMEMORY CONTROL (VCTL1)				---!!!

// VMA/MD CONTROL (VCTL2)				---!!!

// VMA REGISTER (VMA)					---!!!

// VMA INPUT SELECTOR (VMAS)				---!!!

// VIRTUAL MEMORY MAP STAGE 0 (VMEM0)			---!!!

// VIRTUAL MEMORY MAP STAGE 1 (VMEM1)			---!!!  ---
// VIRTUAL MEMORY MAP STAGE 1 (VMEM2)			---!!!  ---

// MAP OUTPUT DRIVE (VMEMDR)				---!!!

//////// IRAML


// MASTER CLOCK (CLOCK1)

// MASTER CLOCK (CLOCK2)

// PDP11 DEBUG INSTRUCTION (DEBUG)			---!!!

// BYPASS CAPACITORS (ICAPS)

// I RAM CONTROL (ICTL)					---!!!				

// IWR PARITY (IWRPAR)

// (CMEM) BUS INTERFACE CABLES (MBCPIN)

// (CMEM) CONNECTOR PINS (MCPINS)

// OVERLORD (OLORD1)					---!!!

// OVERLORD (OLORD2)					---!!!

// OLD PC SAVE SHIFTER (OPCS)				---!!!

// DISPATCH CONTROL (PCTL)				---!!!

// PROM 0-511 (PROM0)					---!!! ---
// PROM 512-1023 (PROM1)				---!!! ---

// RAM 0K-4K, 0-11 (IRAM00)				---!!! ---
// RAM 4K-8K, 0-11 (IRAM01)				---!!! ---
// RAM 8K-12K, 0-11 (IRAM02)				---!!! ---
// RAM 12K-16K, 0-11 (IRAM03)				---!!! ---
// RAM 0K-4K, 12-24 (IRAM10)				---!!! ---
// RAM 4K-8K 12-23 (IRAM11)				---!!! ---
// RAM 8K-12K, 12-23 (IRAM12)				---!!! ---
// (IRAM13)						---!!! ---
// RAM 0K-4K, 24-35 (IRAM20)				---!!! ---
// RAM 4K-8K, 24-35 (IRAM21)				---!!! ---
// RAM8K-12K, 24-35 (IRAM22)				---!!! ---
// RAM 12K-16K, 24-35 (IRAM23)				---!!! ---
// RAM 0K-4K, 36-48 (IRAM30)				---!!! ---
// RAM 4K-8K, 36-48 (IRAM31)				---!!! ---
// RAM 8K-12K, 36-48 (IRAM32)				---!!! ---
// RAM 12K-16K, 36-48 (IRAM33)				---!!! ---

// PDP11 EXAMINE CONTROL (SPY0)				---!!!

// PDP11 EXAMINE (OPC, FLAG1, PC) (SPY4)		---!!! --- Shared wtih SPY1, SPY2.

// STATISTICS COUNTER (STAT)

    Xilinx - All Programmable Support AR# 12281: ChipScope Analyzer - How do I import signal names without having a Core Inserter project? 

AR# 12281
ChipScope Analyzer - How do I import signal names without having a Core Inserter project?

    Description
    Solution
    Linked Answer Records

Description

ChipScope Analyzer requires a ".cdc" file (which is a ChipScope Core Inserter project file) for signal names to be imported.

If I do not use Core Inserter, how do I import signal names?

Solution

Solution 1

Write your own ".cdc" file.

This CDC file requires the following five components:
 

    As the first line of the file, a comment that identifies it as a Core Inserter project file:
     
    #ChipScope Core Inserter Project Version 2.0
     
    A declaration of the signal name for EVERY data signal connected to the ILA core:
     
    Project.unit.Unit Number.data<Channel Number>=Signal Name
     
    A declaration of the width of the data bus.
    This must match the ILA core exactly, or ChipScope Analyzer will not accept the ".cdc" file:
     
    Project.unit.Unit Number.dataWidth=Data Bus Width
     
    A declaration of the signal name for EACH trigger signal that is connected to the ILA core:
     
    Project.unit.Unit Number.trigger<Channel Number>=Signal Name
     
    A declaration of the width of the trigger bus.
    This must match the ILA core exactly, or ChipScope Analyzer will not accept the ".cdc" file:
     
    Project.unit.Unit Number.triggerWidth=Trigger Bus Width


An example CDC file follows; this can be used with the counter design in ChipScope.


___begin file___

#ChipScope Core Inserter Project Version 2.0

Project.unit.0.data<0>=counter[0]

Project.unit.0.data<1>=counter[1]

Project.unit.0.data<2>=counter[2]

Project.unit.0.data<3>=counter[3]

Project.unit.0.data<4>=counter[4]

Project.unit.0.data<5>=counter[5]

Project.unit.0.data<6>=counter[6]

Project.unit.0.data<7>=counter[7]

Project.unit.0.data<8>=counter[8]

Project.unit.0.data<9>=counter[9]

Project.unit.0.data<10>=counter[10]

Project.unit.0.data<11>=counter[11]

Project.unit.0.data<12>=counter[12]

Project.unit.0.data<13>=counter[13]

Project.unit.0.data<14>=counter[14]

Project.unit.0.data<15>=counter[15]

Project.unit.0.dataWidth=16

Project.unit.0.trigger<0>=counter[0]

Project.unit.0.trigger<1>=counter[1]

Project.unit.0.trigger<2>=counter[2]

Project.unit.0.trigger<3>=counter[3]

Project.unit.0.trigger<4>=counter[4]

Project.unit.0.trigger<5>=counter[5]

Project.unit.0.trigger<6>=counter[6]

Project.unit.0.trigger<7>=counter[7]

Project.unit.0.triggerWidth=8


Solution 2

Modify the ".cdc" file(s) generated from CORE Generator.

When you generate the ILA/VIO cores, a ".cdc" file is generated along with each core.

The trigger and data signal names are all defaults in these CDC files and you need to modify them to the expected names manually, according to the description above.

Once this is done, import the CDC files one by one in ChipScope Pro Analyzer.

You will be prompted to choose the correct ILA/VIO core in the design when you import the CDC file.


Solution 3 (ISE 13.2+)

1. Modify the CDC file that comes directly out of the Xilinx CORE Generator tool.

2. Use the Import function in the ChipScope Pro Analyzer.

3. Select which ILA core to apply the CDC file to.


mmc_block_dev.v

#ChipScope Core Generator Project File Version 3.0
#Tue Mar 04 18:44:05 EST 2014
SignalExport.bus<0000>.channelList=0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39
SignalExport.bus<0000>.name=TRIG0
SignalExport.bus<0000>.offset=0.0
SignalExport.bus<0000>.precision=0
SignalExport.bus<0000>.radix=Bin
SignalExport.bus<0000>.scaleFactor=1.0
SignalExport.clockChannel=CLK
SignalExport.dataEqualsTrigger=true
SignalExport.triggerChannel<0000><0000>=TRIG0[0]
SignalExport.triggerChannel<0000><0001>=TRIG0[1]
SignalExport.triggerChannel<0000><0002>=TRIG0[2]
SignalExport.triggerChannel<0000><0003>=TRIG0[3]
SignalExport.triggerChannel<0000><0004>=TRIG0[4]
SignalExport.triggerChannel<0000><0005>=TRIG0[5]
SignalExport.triggerChannel<0000><0006>=TRIG0[6]
SignalExport.triggerChannel<0000><0007>=TRIG0[7]
SignalExport.triggerChannel<0000><0008>=TRIG0[8]
SignalExport.triggerChannel<0000><0009>=TRIG0[9]
SignalExport.triggerChannel<0000><0010>=TRIG0[10]
SignalExport.triggerChannel<0000><0011>=TRIG0[11]
SignalExport.triggerChannel<0000><0012>=TRIG0[12]
SignalExport.triggerChannel<0000><0013>=TRIG0[13]
SignalExport.triggerChannel<0000><0014>=TRIG0[14]
SignalExport.triggerChannel<0000><0015>=TRIG0[15]
SignalExport.triggerChannel<0000><0016>=TRIG0[16]
SignalExport.triggerChannel<0000><0017>=TRIG0[17]
SignalExport.triggerChannel<0000><0018>=TRIG0[18]
SignalExport.triggerChannel<0000><0019>=TRIG0[19]
SignalExport.triggerChannel<0000><0020>=TRIG0[20]
SignalExport.triggerChannel<0000><0021>=TRIG0[21]
SignalExport.triggerChannel<0000><0022>=TRIG0[22]
SignalExport.triggerChannel<0000><0023>=TRIG0[23]
SignalExport.triggerChannel<0000><0024>=TRIG0[24]
SignalExport.triggerChannel<0000><0025>=TRIG0[25]
SignalExport.triggerChannel<0000><0026>=TRIG0[26]
SignalExport.triggerChannel<0000><0027>=TRIG0[27]
SignalExport.triggerChannel<0000><0028>=TRIG0[28]
SignalExport.triggerChannel<0000><0029>=TRIG0[29]
SignalExport.triggerChannel<0000><0030>=TRIG0[30]
SignalExport.triggerChannel<0000><0031>=TRIG0[31]
SignalExport.triggerChannel<0000><0032>=TRIG0[32]
SignalExport.triggerChannel<0000><0033>=TRIG0[33]
SignalExport.triggerChannel<0000><0034>=TRIG0[34]
SignalExport.triggerChannel<0000><0035>=TRIG0[35]
SignalExport.triggerChannel<0000><0036>=TRIG0[36]
SignalExport.triggerChannel<0000><0037>=TRIG0[37]
SignalExport.triggerChannel<0000><0038>=TRIG0[38]
SignalExport.triggerChannel<0000><0039>=TRIG0[39]
SignalExport.triggerPort<0000>.name=TRIG0
SignalExport.triggerPortCount=1
SignalExport.triggerPortIsData<0000>=true
SignalExport.triggerPortWidth<0000>=40
SignalExport.type=ila



mmc_hold[0]
mmc_hold[1]
mmc_hold[2]
mmc_hold[3]
mmc_hold[4]
mmc_hold[5]
mmc_hold[6]
mmc_hold[7]
mmc_hold[8]
mmc_hold[9]
mmc_hold[10]
mmc_hold[11]
mmc_hold[12]
mmc_hold[13]
mmc_hold[14]
mmc_hold[15]
mclk_en
nc[0]
nc[1]
mmc_state[0]
mmc_state[1]
mmc_state[2]
mmc_state[3]
bd_rdy
bd_iordy
mmc_out[0]
mmc_out[1]
mmc_out[2]
mmc_out[3]
mmc_out[4]
mmc_out[5]
mmc_out[6]
mmc_out[7]
mmc_done
state[0]
state[1]
state[2]
state[3]
state[4]
state[5]


mmc.v

#ChipScope Core Generator Project File Version 3.0
#Fri Jan 03 17:17:43 EST 2014
SignalExport.bus<0000>.channelList=0 1 2 3 4 5 6 7
SignalExport.bus<0000>.name=TRIG0
SignalExport.bus<0000>.offset=0.0
SignalExport.bus<0000>.precision=0
SignalExport.bus<0000>.radix=Bin
SignalExport.bus<0000>.scaleFactor=1.0
SignalExport.clockChannel=CLK
SignalExport.dataEqualsTrigger=true
SignalExport.triggerChannel<0000><0000>=TRIG0[0]
SignalExport.triggerChannel<0000><0001>=TRIG0[1]
SignalExport.triggerChannel<0000><0002>=TRIG0[2]
SignalExport.triggerChannel<0000><0003>=TRIG0[3]
SignalExport.triggerChannel<0000><0004>=TRIG0[4]
SignalExport.triggerChannel<0000><0005>=TRIG0[5]
SignalExport.triggerChannel<0000><0006>=TRIG0[6]
SignalExport.triggerChannel<0000><0007>=TRIG0[7]
SignalExport.triggerPort<0000>.name=TRIG0
SignalExport.triggerPortCount=1
SignalExport.triggerPortIsData<0000>=true
SignalExport.triggerPortWidth<0000>=8
SignalExport.type=ila


speed
rd
wr
send
mmc_sclk
mmc_di
mmc_do
mmc_cs


caddr.v

#ChipScope Core Generator Project File Version 3.0
#Thu Mar 13 17:45:47 EDT 2014
SignalExport.bus<0000>.channelList=0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127
SignalExport.bus<0000>.name=TRIG0
SignalExport.bus<0000>.offset=0.0
SignalExport.bus<0000>.precision=0
SignalExport.bus<0000>.radix=Bin
SignalExport.bus<0000>.scaleFactor=1.0
SignalExport.clockChannel=CLK
SignalExport.dataEqualsTrigger=true
SignalExport.triggerChannel<0000><0000>=TRIG0[0]
SignalExport.triggerChannel<0000><0001>=TRIG0[1]
SignalExport.triggerChannel<0000><0002>=TRIG0[2]
SignalExport.triggerChannel<0000><0003>=TRIG0[3]
SignalExport.triggerChannel<0000><0004>=TRIG0[4]
SignalExport.triggerChannel<0000><0005>=TRIG0[5]
SignalExport.triggerChannel<0000><0006>=TRIG0[6]
SignalExport.triggerChannel<0000><0007>=TRIG0[7]
SignalExport.triggerChannel<0000><0008>=TRIG0[8]
SignalExport.triggerChannel<0000><0009>=TRIG0[9]
SignalExport.triggerChannel<0000><0010>=TRIG0[10]
SignalExport.triggerChannel<0000><0011>=TRIG0[11]
SignalExport.triggerChannel<0000><0012>=TRIG0[12]
SignalExport.triggerChannel<0000><0013>=TRIG0[13]
SignalExport.triggerChannel<0000><0014>=TRIG0[14]
SignalExport.triggerChannel<0000><0015>=TRIG0[15]
SignalExport.triggerChannel<0000><0016>=TRIG0[16]
SignalExport.triggerChannel<0000><0017>=TRIG0[17]
SignalExport.triggerChannel<0000><0018>=TRIG0[18]
SignalExport.triggerChannel<0000><0019>=TRIG0[19]
SignalExport.triggerChannel<0000><0020>=TRIG0[20]
SignalExport.triggerChannel<0000><0021>=TRIG0[21]
SignalExport.triggerChannel<0000><0022>=TRIG0[22]
SignalExport.triggerChannel<0000><0023>=TRIG0[23]
SignalExport.triggerChannel<0000><0024>=TRIG0[24]
SignalExport.triggerChannel<0000><0025>=TRIG0[25]
SignalExport.triggerChannel<0000><0026>=TRIG0[26]
SignalExport.triggerChannel<0000><0027>=TRIG0[27]
SignalExport.triggerChannel<0000><0028>=TRIG0[28]
SignalExport.triggerChannel<0000><0029>=TRIG0[29]
SignalExport.triggerChannel<0000><0030>=TRIG0[30]
SignalExport.triggerChannel<0000><0031>=TRIG0[31]
SignalExport.triggerChannel<0000><0032>=TRIG0[32]
SignalExport.triggerChannel<0000><0033>=TRIG0[33]
SignalExport.triggerChannel<0000><0034>=TRIG0[34]
SignalExport.triggerChannel<0000><0035>=TRIG0[35]
SignalExport.triggerChannel<0000><0036>=TRIG0[36]
SignalExport.triggerChannel<0000><0037>=TRIG0[37]
SignalExport.triggerChannel<0000><0038>=TRIG0[38]
SignalExport.triggerChannel<0000><0039>=TRIG0[39]
SignalExport.triggerChannel<0000><0040>=TRIG0[40]
SignalExport.triggerChannel<0000><0041>=TRIG0[41]
SignalExport.triggerChannel<0000><0042>=TRIG0[42]
SignalExport.triggerChannel<0000><0043>=TRIG0[43]
SignalExport.triggerChannel<0000><0044>=TRIG0[44]
SignalExport.triggerChannel<0000><0045>=TRIG0[45]
SignalExport.triggerChannel<0000><0046>=TRIG0[46]
SignalExport.triggerChannel<0000><0047>=TRIG0[47]
SignalExport.triggerChannel<0000><0048>=TRIG0[48]
SignalExport.triggerChannel<0000><0049>=TRIG0[49]
SignalExport.triggerChannel<0000><0050>=TRIG0[50]
SignalExport.triggerChannel<0000><0051>=TRIG0[51]
SignalExport.triggerChannel<0000><0052>=TRIG0[52]
SignalExport.triggerChannel<0000><0053>=TRIG0[53]
SignalExport.triggerChannel<0000><0054>=TRIG0[54]
SignalExport.triggerChannel<0000><0055>=TRIG0[55]
SignalExport.triggerChannel<0000><0056>=TRIG0[56]
SignalExport.triggerChannel<0000><0057>=TRIG0[57]
SignalExport.triggerChannel<0000><0058>=TRIG0[58]
SignalExport.triggerChannel<0000><0059>=TRIG0[59]
SignalExport.triggerChannel<0000><0060>=TRIG0[60]
SignalExport.triggerChannel<0000><0061>=TRIG0[61]
SignalExport.triggerChannel<0000><0062>=TRIG0[62]
SignalExport.triggerChannel<0000><0063>=TRIG0[63]
SignalExport.triggerChannel<0000><0064>=TRIG0[64]
SignalExport.triggerChannel<0000><0065>=TRIG0[65]
SignalExport.triggerChannel<0000><0066>=TRIG0[66]
SignalExport.triggerChannel<0000><0067>=TRIG0[67]
SignalExport.triggerChannel<0000><0068>=TRIG0[68]
SignalExport.triggerChannel<0000><0069>=TRIG0[69]
SignalExport.triggerChannel<0000><0070>=TRIG0[70]
SignalExport.triggerChannel<0000><0071>=TRIG0[71]
SignalExport.triggerChannel<0000><0072>=TRIG0[72]
SignalExport.triggerChannel<0000><0073>=TRIG0[73]
SignalExport.triggerChannel<0000><0074>=TRIG0[74]
SignalExport.triggerChannel<0000><0075>=TRIG0[75]
SignalExport.triggerChannel<0000><0076>=TRIG0[76]
SignalExport.triggerChannel<0000><0077>=TRIG0[77]
SignalExport.triggerChannel<0000><0078>=TRIG0[78]
SignalExport.triggerChannel<0000><0079>=TRIG0[79]
SignalExport.triggerChannel<0000><0080>=TRIG0[80]
SignalExport.triggerChannel<0000><0081>=TRIG0[81]
SignalExport.triggerChannel<0000><0082>=TRIG0[82]
SignalExport.triggerChannel<0000><0083>=TRIG0[83]
SignalExport.triggerChannel<0000><0084>=TRIG0[84]
SignalExport.triggerChannel<0000><0085>=TRIG0[85]
SignalExport.triggerChannel<0000><0086>=TRIG0[86]
SignalExport.triggerChannel<0000><0087>=TRIG0[87]
SignalExport.triggerChannel<0000><0088>=TRIG0[88]
SignalExport.triggerChannel<0000><0089>=TRIG0[89]
SignalExport.triggerChannel<0000><0090>=TRIG0[90]
SignalExport.triggerChannel<0000><0091>=TRIG0[91]
SignalExport.triggerChannel<0000><0092>=TRIG0[92]
SignalExport.triggerChannel<0000><0093>=TRIG0[93]
SignalExport.triggerChannel<0000><0094>=TRIG0[94]
SignalExport.triggerChannel<0000><0095>=TRIG0[95]
SignalExport.triggerChannel<0000><0096>=TRIG0[96]
SignalExport.triggerChannel<0000><0097>=TRIG0[97]
SignalExport.triggerChannel<0000><0098>=TRIG0[98]
SignalExport.triggerChannel<0000><0099>=TRIG0[99]
SignalExport.triggerChannel<0000><0100>=TRIG0[100]
SignalExport.triggerChannel<0000><0101>=TRIG0[101]
SignalExport.triggerChannel<0000><0102>=TRIG0[102]
SignalExport.triggerChannel<0000><0103>=TRIG0[103]
SignalExport.triggerChannel<0000><0104>=TRIG0[104]
SignalExport.triggerChannel<0000><0105>=TRIG0[105]
SignalExport.triggerChannel<0000><0106>=TRIG0[106]
SignalExport.triggerChannel<0000><0107>=TRIG0[107]
SignalExport.triggerChannel<0000><0108>=TRIG0[108]
SignalExport.triggerChannel<0000><0109>=TRIG0[109]
SignalExport.triggerChannel<0000><0110>=TRIG0[110]
SignalExport.triggerChannel<0000><0111>=TRIG0[111]
SignalExport.triggerChannel<0000><0112>=TRIG0[112]
SignalExport.triggerChannel<0000><0113>=TRIG0[113]
SignalExport.triggerChannel<0000><0114>=TRIG0[114]
SignalExport.triggerChannel<0000><0115>=TRIG0[115]
SignalExport.triggerChannel<0000><0116>=TRIG0[116]
SignalExport.triggerChannel<0000><0117>=TRIG0[117]
SignalExport.triggerChannel<0000><0118>=TRIG0[118]
SignalExport.triggerChannel<0000><0119>=TRIG0[119]
SignalExport.triggerChannel<0000><0120>=TRIG0[120]
SignalExport.triggerChannel<0000><0121>=TRIG0[121]
SignalExport.triggerChannel<0000><0122>=TRIG0[122]
SignalExport.triggerChannel<0000><0123>=TRIG0[123]
SignalExport.triggerChannel<0000><0124>=TRIG0[124]
SignalExport.triggerChannel<0000><0125>=TRIG0[125]
SignalExport.triggerChannel<0000><0126>=TRIG0[126]
SignalExport.triggerChannel<0000><0127>=TRIG0[127]
SignalExport.triggerPort<0000>.name=TRIG0
SignalExport.triggerPortCount=1
SignalExport.triggerPortIsData<0000>=true
SignalExport.triggerPortWidth<0000>=128
SignalExport.type=ila


busint.disk.state[0]
busint.disk.state[1]
busint.disk.state[2]
busint.disk.state[3]
busint.disk.state[4]
bd_state_in[0]
bd_state_in[1]
bd_state_in[2]
bd_state_in[3]
bd_state_in[4]
bd_state_in[5]
bd_state_in[6]
bd_state_in[7]
bd_state_in[8]
bd_state_in[9]
bd_state_in[10]
bd_state_in[11]
state_decode
lpc[0]
lpc[1]
lpc[2]
lpc[3]
lpc[4]
lpc[5]
lpc[6]
lpc[7]
lpc[8]
lpc[9]
lpc[10]
lpc[11]
lpc[12]
lpc[13]
a[0]
a[1]
a[2]
a[3]
a[4]
a[5]
a[6]
a[7]
a[8]
a[9]
a[10]
a[11]
a[12]
a[13]
a[14]
a[15]
a[16]
a[17]
a[18]
a[19]
a[20]
a[21]
a[22]
a[23]
a[24]
a[25]
a[26]
a[27]
a[28]
a[29]
a[30]
a[31]
m[0]
m[1]
m[2]
m[3]
m[4]
m[5]
m[6]
m[7]
m[8]
m[9]
m[10]
m[11]
m[12]
m[13]
m[14]
m[15]
m[16]
m[17]
m[18]
m[19]
m[20]
m[21]
m[22]
m[23]
m[24]
m[25]
m[26]
m[27]
m[28]
m[29]
m[30]
m[31		   ]
md[0]
md[1]
md[2]
md[3]
md[4]
md[5]
md[6]
md[7]
md[8]
md[9]
md[10]
md[11]
md[12]
md[13]
md[14]
md[15]
md[16]
md[17]
md[18]
md[19]
md[20]
md[21]
md[22]
md[23]
md[24]
md[25]
md[26]
md[27]
md[28]
md[29]
md[30]
md[31]

make sure ftdi_sio is unloaded before hooking up chipscope, otherwise
you will get the following error:

  $ tools/jtag/xilinx_xvc.py ftdi 0
  FTDI Driver error in function FT_Open: FT_DEVICE_NOT_OPENED (3)

rmmod ftdi_sio


chipscope:

xvcd/xvcd &
/opt/Xilinx/14.7/ISE_DS/ISE/bin/lin64/analyzer 

or

python2 playtag/tools/jtag/xilinx_xvc.py ftdi 0 &
/opt/Xilinx/14.7/ISE_DS/ISE/bin/lin64/analyzer

setup:

xilinx_xvc host=127.0.0.1:2542 disableversioncheck=true

fpgprog:

fpgaprog/fpgaprog -r  -v -b fpgaprog/bscan_spi_lx45_csg324.bit -f ise-lx45/top.bit


(cd niox/ise; sh run.sh); fpgaprog/fpgaprog -v -f niox/ise/top_niox.bit
(cd ise-lx45; sh run.sh); fpgaprog/fpgaprog -v -f ise-lx45/top.bit


